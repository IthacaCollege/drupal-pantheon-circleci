version: 2

defaults: &defaults
  docker:
    - image: quay.io/ithacacollege/www-ithaca-ci:latest
  environment:
    TZ: "/usr/share/zoneinfo/America/New_York"
    NOTIFY: 'scripts/github/add-commit-comment {project} {sha} "Created multidev environment [{site}#{env}]({dashboard-url})." {site-url}'
    TERMINUS_SITE: ithaca-www
    TEST_SITE_NAME: Ithaca College
    DEPLOYMENT_BRANCH: develop

jobs:
  init-pantheon:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Initializing terminus and multidev
          command: |
            .circleci/scripts/terminus-env.sh
            source env.sh
            .circleci/scripts/pantheon-reset.sh

  build-drupal:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          name: "Restoring cache: composer dependencies"
          keys:
            - composer-v1-{{ .Branch }}-{{ checksum "composer-lock.json" }}
            - composer-v1-{{ .Branch }}-
            - composer-v1-
      - run:
          name: Installing composer dependencies
          command: |
            .circleci/scripts/github-env.sh
            source env.sh
            .circleci/scripts/build-drupal.sh
      - save_cache:
          name: "Saving cache: composer dependecies"
          key: composer-v1-{{ .Branch }}-{{ checksum "composer-lock.json" }}
          paths:
            - vendor

  build-node:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          name: "Restoring cache: npm install"
          keys:
            - theme-npm-v1-{{ .Branch }}-{{ checksum "web/themes/custom/ithaca/package-lock.json" }}
            - theme-npm-v1-{{ .Branch }}-
            - theme-npm-v1-
      - run:
          name: Installing node dependencies for theme building
          command: |
            .circleci/scripts/build-node.sh
      - save_cache:
          name: "Saving cache: npm install"
          key: theme-npm-v1-{{ .Branch }}-{{ checksum "web/themes/custom/ithaca/package-lock.json" }}
          paths:
            - web/themes/custom/ithaca/node_modules
            - web/themes/custom/ithaca/components/_twig-components/functions

  build-theme:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Generating theme checksum
          command: ls -laR web/themes/custom/ithaca/components/_patterns > web/themes/custom/ithaca/pattern-checksum
      - restore_cache:
          # PatternLab build doesn't have a partial dependency run, so only use the exact cache
          name: "Restoring cache: theme build"
          key: theme-build-{{ checksum "web/themes/custom/ithaca/pattern-checksum" }}
      - restore_cache:
          # We will need to have built npm by now, so we will have an exact npm cache
          name: "Restoring cache: npm install"
          key: theme-npm-v1-{{ .Branch }}-{{ checksum "web/themes/custom/ithaca/package-lock.json" }}
      - run:
          name: Building theme
          command: |
            .circle/scripts/build-theme.sh
      - save_cache:
          name: "Saving cache: theme build"
            - theme-build-{{ checksum "web/themes/custom/ithaca/pattern-checksum" }}
          paths:
            - web/themes/custom/ithaca/pattern_lab
            - web/themes/custom/ithaca/dist

  report-done:
    docker:
      - image: alpine:3.6
    steps:
      - checkout
      - run:
          name: Generating theme checksum
          command: ls -laR web/themes/custom/ithaca/components/_patterns > web/themes/custom/ithaca/pattern-checksum
      - restore_cache:
          name: "Retrieve cache: composer dependencies"
          key: composer-v1-{{ .Branch }}-{{ checksum "composer-lock.json" }}
      - restore_cache:
          name: "Retrieve cache: theme build"
          key: theme-build-{{ checksum "web/themes/custom/ithaca/pattern-checksum" }}
      - run:
          name: Complete
          command: echo "Completed build"

workflows:
  version: 2
  build-pr:
    jobs:
      - init-pantheon
      - build-drupal
      - build-node
      - build-theme:
          requires:
            - build-node
      - report-done:
          requires:
            - init-pantheon
            - build-drupal
            - build-theme
